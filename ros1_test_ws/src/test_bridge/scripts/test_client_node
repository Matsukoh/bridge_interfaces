#!/usr/bin/env python
# -*- coding:utf-8 -*-
import rospy
from bridge_interfaces.srv import BridgeSrv, BridgeSrvRequest
from bridge_interfaces_ros1.srv import BridgeROS1Srv, BridgeROS1SrvRequest

class TestClientNode:
    def __init__(self):
        rospy.wait_for_service('bridge_srv')
        rospy.wait_for_service('bridge_ros_srv')
    
    def request_loop(self):
        while not rospy.is_shutdown():
            try:
                bridge_srv = rospy.ServiceProxy('bridge_srv', BridgeSrv)
                resp = bridge_srv("test", "This is the test message.")
                rospy.loginfo(resp.message) 
            
            except rospy.ServiceException as e:
                print("Bridge service call failed: %s"%e)
            
            try:
                bridge_ros_srv = rospy.ServiceProxy('bridge_ros_srv', BridgeROS1Srv)
                resp_ros = bridge_ros_srv("test_ros", "This is the test message.")
                rospy.loginfo(resp_ros.message_ros1) 
            
            except rospy.ServiceException as e:
                print("BridgeROS service call failed: %s"%e)
            
            rospy.sleep(1.0)

def main():
    rospy.init_node('test_client_node', anonymous=True)
    print('Hi from test_client node.')
    try:
        node = TestClientNode()
        node.request_loop()
    except rospy.ROSInterruptException: pass

if __name__ == '__main__':
    main()